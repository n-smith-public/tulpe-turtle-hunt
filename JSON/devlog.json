{
    "First Turtles": {
        "description": "Today, the first physical turtles were made. While having the website and backend being established is important, it's kind of useless if nobody is able to get to them. So, today marked the first time that the turtles saw the light of day. During NOAC 2024, I will have small turtles on clothes pins with a QR code to this website. <br><br>I hope that by spreading these around I will manage to find some people who are interested and willing to put some basic information out there, and maybe find some people I can talk to more after the conference ends. I always enjoyed talking to people of diverse backgrounds, and I think that by doing this I could potentially find some really cool people. <br><br>So, during the conference, be on the lookout for a few fancy turtles on clothes pins."
    },
    "Development Log": {
        "description": "While I was working on some other things, I remembered a video I watched a while ago. In it, the commentator mentioned that keeping a dev log would help keep them productive, and also make tracking changes a lot easier. <br><br>While yes, I was already using GitHub, I figured that adding a dev log to this project would make it feel much more approachable, and allow myself and others to better grasp the stages that this went through to get to it's &quot;final&quot; form. <br><br>Making it was actually quite simple in comparison to a lot of the other stages. It's just a grid template of cards that contain a topic and date, which opens the pop up you are reading right now, and closes automatically if you click outside of it or on the X. <br><br>I would like to thank <a href='https://github.com/seuha516/devlog-react-frontend'>seuha516 on GitHub</a> for the layout idea. <br><br><img src='/Media/devlogA.png' alt='The dev log page, at the time of writing this description'> <br><br>Fun fact! When I tried adding images, apparently Snipping Tool saved them all as .PNG, which is fine when I'm on my local Node.JS server. HOWEVER, when it goes on my production server the case matters, so they were being treated as an unknown file, so thus were throwing errors. So, be careful of file capitalization!"
    },
    "Logging": {
        "description": "As a developer, logging what happens with your program is really important. While I already had all of the logs and error calls I needed set up, I found it quite hard to tell when something went wrong, and it was also easy to lose track of if something was an error or a warning. <br><br><img src='/Media/loggingA.png' alt='Original logs'><br>So, I began messing around with <a href='https://www.npmjs.com/package/chalk'>Chalk</a> and <a href='https://www.npmjs.com/package/console-stamp'>ConsoleStamp</a>. So, at first I managed to get the time stamp and label working fine, but I couldn't for the life of me get the colours to work. <br><br><img src='/Media/loggingB.png' alt='Console log with labels, but no colours'><br>While at the same time, I put the same example code into a new JS file and it worked perfectly fine, how odd. <br><br><img src='/Media/loggingC.png' alt='Console with labels and colours working fine'><br>Eventually what ended up working was some sort of jank mess that I thought wouldn't work originally, but ended up working nearly perfectly. I did have to remove the proper method of showing the label, but I found an alternative. Now, it seems to handle the time stamps and colours quite well, if I do say so myself. <br><br><img src='/Media/loggingD.png' alt='The current version of the console, with colours and timestamp working'><br>On a side note, I ended up changing the format to . instead of / because it was easier to read at a glance."
    },
    "Data Dashboard": {
        "description": "After making the instagram page, I figured that I should have a way to visualize the data so I can posts. I had a certain concept in mind of how to make this page look, but it turned out to be a lot more annoying than I originally thought it would be. Turns out, making charts in javascript is a royal pain, especially when you want them to remember previous calls. <br><br>What it ended up having was a line chart showing the number of submissions per day, as well as a few pie charts showing some information I found interesting. I also implemented a way to view all of the data from the page so I wouldn't need to open MySQL Workbench while at NOAC. <br><br>To prevent people from viewing this, I put the page behind a password, while also adding a max amount of attempts to prevent brute forcing. I also wanted a way to clear the data as an emergency, so I ended up learning how <a href='https://nodemailer.com/'>nodemailer</a> works so I could send a confirmation code to my personal email as an extra security. While I don't have a ton of use for this now, I think having the possibility to send emails from my server is really cool."
    },
    "About Page": {
        "description": "If you found this dev log, you probably read the about page. While I briefly explained this project in the disclaimer page, I was told that I should probably explain further what the project was about, who I am, and why I made this from people who helped me design this. Special thanks to both of my parents for this. But, I didn't really want it to look the same as the rest of the page, so the gradient design started. <br><br>I knew going into it that I was going to have a longer block of text here, so I experimented with how to get the page to load. What I ended up settling with was having the text load in as you scrolled then load out to make it slightly easier to read. I also messed around with the special link highlighting which is used all across the site while making this, as well as the button resizing on hover. These just made them stand out a bit more, and I feel like it worked out really well. I know I could probably have written more there, but I wanted to make it fairly short. I'll probably be relaunching my actual personal website once school starts again which will have much more information, so watch <a href='https://www.greenbueller.com'>my personal page</a> for that in the future."
    },
    "Data Submission Enhancements": {
        "description": "So like I mentioned in the data submission dev log, the lodge box used to be a simple text field. I found this to be quite disappointing, and would lead to different spellings or something else which would mess with data tracking, and require that I go through and manually modify some submissions to keep it consistent. So what better way is there than a dropdown? <br><br>The only downside to the dropdown, as I had to explain in the info tooltip is that there is a potential that I missed a lodge, but I figured this approach would work better. Due to the sheer amount of lodges, most of which I had never heard of until doing this project, I couldn't just throw them all into my HTML file, and a simple dropdown could take ages to search through. <br><br>In order to solve the issue of the amount, I put all of the lodges into a JSON file so I could easily add or remove a lodge if I had made an error, plus when used in tandem with the other aspect I could do layered groupings, so I could show each section as well as region. I found the <a href='https://select2.org/'>Select2 library</a> while trying to figure out the search option, and it turned out to work incredibly well in comparison to a default HTML dropdown. If you ever have a dropdown with more than a few options, I would highly recommend you use this library."
    },
    "Mobile Formatting": {
        "description": "As I mentioned in some of the earlier dev logs, trying to get this page to actually show properly on my phone was quite the pain. I tried doing things with manually scaling the CSS based on the browser viewport size, but that barely worked, I also tried hiding the old foreground image based on if you were on mobile or not but that only worked half of the time. I also tried using a javascript function that would scale things based on if you were on a mobile device or not, but that also failed. <br><br>Turns out, there is quite a simple way to do it.  <br><br><pre><code>&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt; <br>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, height=device-height, initial-scale=1.0&quot;&gt; </code></pre> <br>Just adding these two lines in the header of each page automatically scaled each of the pages to fit within the viewport of every device. I previously worked on a website project at the NOAC Hackathon 2022, and that page used these. If you're looking to make a website, I'd highly recommend just throwing these in to make it so much easier on yourself."
    },
    "Data Submission": {
        "description": "SQL sure is an odd language. But what is even more odd is trying to submit data through Node.js to my database when I have Google Authentication. For a solid two days or so, I could not get data submission to work on the production version of the website, it worked fine on my local server though. So, what do you do? <br><br>I ended up getting rid of google authentication at some point during this process, and while that did remove some anti-spam protection it also made the website actually, y'know, work. I originally had it set up so everything was a typed submission box, including Lodge, and with some pretty basic formatting. Boring, I know. However, it worked, and that's what really mattered in the end. <br><br>I also wanted there to be some way of showing that you actually submitted your data properly, so I learned how the <a href='https://sweetalert.js.org/'>SweetAlerts javascript library</a> worked, and they looked incredible. So, for every action I added a custom alert using that library. Assuming everything goes right, you get a nice success alert and a cheery sound effect on a successful submission. If something goes wrong, there's a simple message saying to try again, or contact me if it keeps happening so I can try to figure it out."
    },
    "Disclaimer Page": {
        "description": "The first thing I did once I figured out how to set up domains with my server host and cloudflare was set up the disclaimer page. I had an idea for a design, which is somewhat like how it turned out as it is now. <br><br>So to begin with, I originally had the foreground image that the disclaimer text was on as a single solid image that was overlayed. Boy, what a mess that turned out to be. <br><br> <img src='/Media/disclaimerA.png' akt='An original version of the disclaimer page'> <br> Trying to get it centered on my computer was quite annoying, then centering the text on that, and when I finally got it looking alright on my computer, it looked horrible on my phone. <br><br>So, I ended up scrapping that original idea of using a foreground image, and instead opted for using a div within the code to create the box that is shown now. It is resizeable, and looks a lot better in my opinion. <br><br>Eventually I wrote the disclaimer page, but I found it to be lacking something. An idea that I had was to have a live count of the number of turtles found appear, so people could see how many others had been found and scanned. It's relatively simple as it just simply collects a count of every row in the database that has the submissions and prints that to the page."
    },
    "Domains": {
        "description": "So fun little fact, google domains doesn't actually exist anymore. Crazy, right? I remember looking at it years ago, and I think I even bought one when I used to be a minecraft server administrator back in like 2018. So, when my immediate thought for a domain was lost, it took a little bit to figure out how I was gonna host this thing. <br><br>Turns out, a lot of platforms will offer hosting and websites for vastly different prices, but you can host multiple websites through github. So, what ended up working for this was a combination of my DNS provider, Hostinger, which was then sent to Cloudflare, in order to have the greenbueller.com domain, as well as the administrator email I used. From there, I used github to host the page, then Node.JS to dynamically update the page, as well as allow me to connect to my AWS database."
    },
    "Initial Conception": {
        "description": "As was described in <a href='/about'>the about page</a>, the idea for this project was created in a discussion post for my Database I course I took this summer. I already knew about the ducks from my family, and I figured this would be an interesting experiment to carry out as I learned about database design and SQL. <br><br>This project originally had some very different intentions from how it ended up. Originally, I was going to have Google authentication involved, as well as having the website a lot simpler. Clearly, that is not how it ended up."
    }
}